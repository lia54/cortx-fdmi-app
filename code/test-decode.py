import json
import codecs
import boto3

kv_records = []

kv_record ={ "opcode": "231", "fid": "<5400000500b90e3b:4ff0000001f00001>", "cr_key": "6f626a65637431", "cr_val": "7b2241434c223a225044393462577767646d567963326c76626a30694d5334774969426c626d4e765a476c755a7a3069565652474c54676949484e305957356b59577876626d5539496d3576496a382b5045466a5932567a63304e76626e5279623278516232787059336b6765473173626e4d39496d6830644841364c79397a4d793568625746366232356864334d75593239744c325276597938794d4441324c54417a4c5441784c79492b43694138543364755a58492b4369416750456c45506d52685a6a526d5954646c5a6d5132597a526c596d4a684e7a45334e5456684d7a63774d5749344e6a52694e6a63314e3255784d446b7759325a684e445932593245304e475a684e6a526d4e4759324d7a4e694e5751384c306c4550676f674944784561584e7762474635546d46745a543573615746755954777652476c7a63477868655535686257552b436941384c303933626d567950676f675045466a5932567a63304e76626e52796232784d61584e3050676f6749447848636d46756444344b4943416750456479595735305a57556765473173626e4d3665484e7050534a6f644852774f693876643364334c6e637a4c6d39795a7938794d4441784c31684e54464e6a6147567459533170626e4e305957356a5a53496765484e704f6e523563475539496b4e68626d397561574e686246567a5a58496950676f674943416750456c45506d52685a6a526d5954646c5a6d5132597a526c596d4a684e7a45334e5456684d7a63774d5749344e6a52694e6a63314e3255784d446b7759325a684e445932593245304e475a684e6a526d4e4759324d7a4e694e5751384c306c4550676f6749434167504552706333427359586c4f5957316c506d7870595735685043394561584e7762474635546d46745a54344b4943416750433948636d46756447566c50676f67494341385547567962576c7a63326c76626a35475655784d58304e50546c5253543077384c31426c636d317063334e706232342b4369416750433948636d46756444344b4944777651574e6a5a584e7a5132397564484a76624578706333512b436a777651574e6a5a584e7a5132397564484a766246427662476c6a6554343d222c224275636b65742d4e616d65223a2264656d6f2d736f757263656275636b6574222c224f626a6563742d4e616d65223a226f626a65637431222c224f626a6563742d555249223a2264656d6f2d736f757263656275636b65745c5c6f626a65637431222c2250564944223a22415141414141414141485970414141414141414141413d3d222c2253797374656d2d446566696e6564223a7b22436f6e74656e742d4c656e677468223a223131222c22436f6e74656e742d4d4435223a226332373564386532363934366435623965313066353065363363633238376366222c22436f6e74656e742d54797065223a22746578742f706c61696e222c2244617465223a22323032312d31302d31335431383a31353a30362e3030305a222c224c6173742d4d6f646966696564223a22323032312d31302d31335431383a31353a30362e3030305a222c224f776e65722d4163636f756e74223a226c69616e61222c224f776e65722d4163636f756e742d6964223a22383836333931303837393534222c224f776e65722d43616e6f6e6963616c2d6964223a2264616634666137656664366334656262613731373535613337303162383634623637353765313039306366613436366361343466613634663466363333623564222c224f776e65722d55736572223a22726f6f74222c224f776e65722d557365722d6964223a226c565465746c66475363713548437249303374697177222c22782d616d7a2d7365727665722d736964652d656e6372797074696f6e223a224e6f6e65222c22782d616d7a2d7365727665722d736964652d656e6372797074696f6e2d6177732d6b6d732d6b65792d6964223a22222c22782d616d7a2d7365727665722d736964652d656e6372797074696f6e2d637573746f6d65722d616c676f726974686d223a22222c22782d616d7a2d7365727665722d736964652d656e6372797074696f6e2d637573746f6d65722d6b6579223a22222c22782d616d7a2d7365727665722d736964652d656e6372797074696f6e2d637573746f6d65722d6b65792d4d4435223a22222c22782d616d7a2d73746f726167652d636c617373223a225354414e44415244222c22782d616d7a2d76657273696f6e2d6964223a224d5467304e4459334e4449304d7a6b314e6a41324e4455324d4463222c22782d616d7a2d776562736974652d72656469726563742d6c6f636174696f6e223a224e6f6e65227d2c226372656174655f74696d657374616d70223a22323032312d31302d31335431383a31353a30362e3030305a222c226c61796f75745f6964223a332c226d6f74725f6f6964223a224f773635414141414141413d2d42514477415141413845383d227d0a" } 

#kvs = json.loads(kv_record)
encoded_val = kv_record.get('cr_val')
print(codecs.decode(encoded_val, 'hex'))
decoded_val = codecs.decode(encoded_val, 'hex').decode('utf-8')

encoded_key = kv_record.get('cr_key')
decoded_key = codecs.decode(encoded_key, 'hex').decode('utf-8')


record = {'fid': kv_record['fid'], 'cr_key': decoded_key, 'cr_val': decoded_val}
my_counts= {}
kv_records.append(record)

#Init client connection with actual key ID and Secret key for my aws client
session = boto3.Session(aws_access_key_id='AKIAu8cBwsNeSeWcX1L0kaCaYg', aws_secret_access_key='j98WQMFokoNuCgHos37Hc3rSfktoVbuVdJzerQIz')
client = session.resource(service_name='s3', region_name='US', endpoint_url='http://s3.seagate.com')
print(kv_records)
for kv in kv_records:
    print(json.loads(kv['cr_val']))
    object_key = kv['cr_key']
    bucket = json.loads(kv['cr_val'])['Bucket-Name']
    print(bucket)
    # Get object data
    # text_obj = get_object(client, bucket, object_key)
    # print(session.get_available_services())
    # print(session.get_available_resources())
    value = client.Object(bucket, object_key).get()['Body'].read().decode('utf-8')

    words = str(value).split()

    for word in words:
        word_lw = word.lower()
        if word_lw in my_counts:
            my_counts[word_lw] +=1
        else:
            my_counts[word_lw] =1
# Sort count dict
sorted_counts= {k: v for k, v in sorted(my_counts.items(), key=lambda item: item[1], reverse=True)}
# print(sorted_counts)

# Return the 4 most popular words
print(list(sorted_counts.items())[:2])
